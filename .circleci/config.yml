version: 2.1

jobs:
  build-frontend:
    docker:
    - image: circleci/node:13.8.0
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
    - image: cimg/node:18.4.0
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
    - image: cimg/node:18.4.0
    steps:
    - checkout
    - restore_cache: 
        keys: [frontend-test]
    - run:
        name: front-end test
        command: |
          cd frontend
          npm install
          npm run test
    - save_cache:
        paths: [frontend/test]
        key: frontend-test
                
  test-backend:
    docker:
    - image: cimg/node:18.4.0
    resource_class: medium
    steps:
    - checkout
    - restore_cache: 
        keys: [backend-test]
    - run:
        name: back-end test
        command: |
          cd backend
          npm install
          npm run test
    - save_cache:
        paths: [backend/test]
        key: backend-test
            
  scan-frontend:
    docker:
    - image: cimg/node:18.4.0
    resource_class: medium
    steps:
    - checkout
    - run:
        name: front-end scan
        command: |
          cd frontend
          npm install
          npm audit fix --audit-level=critical
          npm audit --audit-level=critical


  scan-backend:
    docker:
    - image: cimg/node:18.4.0
    resource_class: medium
    steps:
    - checkout
    - run:
        name: back-end scan
        command: |
          cd backend
          npm install
          npm audit fix --audit-level=critical
          npm audit --audit-level=critical

workflows:
  Udapeople:
    jobs:
      - build-frontend:
          filters:
            branches:
              only:
                - master
      - build-backend:
          filters:
            branches:
              only:
                - master
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend, test-backend]
      - scan-frontend:
          requires: [build-frontend, test-frontend]
